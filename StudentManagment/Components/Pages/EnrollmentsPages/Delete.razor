@page "/enrollments/delete"
@using Microsoft.EntityFrameworkCore
@using StudentManagment.Core.Entites
@inject IDbContextFactory<StudentManagment.Data.StudentMGTDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Enrollments</h2>
    <hr />
    @if (enrollments is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">StudentID</dt>
            <dd class="col-sm-10">@enrollments.StudentID</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CourseID</dt>
            <dd class="col-sm-10">@enrollments.CourseID</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EnrollmentDate</dt>
            <dd class="col-sm-10">@enrollments.EnrollmentDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Grade</dt>
            <dd class="col-sm-10">@enrollments.Grade</dd>
        </dl>
        <EditForm method="post" Model="enrollments" OnValidSubmit="DeleteEnrollments" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(enrollments is null)">Delete</button> |
            <a href="/enrollments">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Enrollments? enrollments;

    [SupplyParameterFromQuery]
    private long EnrollmentID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        enrollments = await context.Enrollment.FirstOrDefaultAsync(m => m.EnrollmentID == EnrollmentID);

        if (enrollments is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteEnrollments()
    {
        using var context = DbFactory.CreateDbContext();
        context.Enrollment.Remove(enrollments!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/enrollments");
    }
}
