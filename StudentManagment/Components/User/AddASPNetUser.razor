@page "/addaspnetuser"
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using MudBlazor;
@inject UserManager<ApplicationUser> userManager
@inject RoleManager<ApplicationUserRole> roleManager
@inject NavigationManager Navigation
<h3>AddUser</h3>

<EditForm Model="newUser"  method="post" FormName="addrole">
    <DataAnnotationsValidator />
    <h2>Create a new account.</h2>
    <hr />
    <ValidationSummary class="text-danger" role="alert" />
    <div class="form-floating mb-3">
        <InputText @bind-Value="newUser.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
        <label for="email">Email</label>
        <ValidationMessage For="() => newUser.Email" class="text-danger" />
    </div>
    <div class="form-floating mb-3">
        <InputText type="password" @bind-Value="newUser.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
        <label for="password">Password</label>
        <ValidationMessage For="() => newUser.Password" class="text-danger" />
    </div>
    <div>


        <InputSelect @bind-Value="selectedRole">
                <option value="">-- Select a product --</option>
                @foreach (var role in roles)
                {
                <option value="@role.">@role.</option>
                }
            </InputSelect>
            
       
        
    </div>
    <button type="submit" class="w-100 btn btn-lg btn-primary" OnClick="RegisterUser">Register</button>
</EditForm>


@* <MudCard>
    <MudCardContent>
        <MudForm @ref="form" @valid="isValid">
            <MudTextField @bind-Value="newUser.Email" Label="Email" Required="true" />
            <MudTextField @bind-Value="newUser.Password" Label="Password" InputType="InputType.Password" Required="true" />
            <MudSelect T="string" Label="Role" @bind-Value="selectedRole" Required="true">
                @foreach (var role in roles)
                {
                    <MudSelectItem Value="@role">@role</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
        <MudButton OnClick="RegisterUser" Disabled="!isValid">Add User</MudButton>
    </MudCardContent>
</MudCard> *@

@code {
    //private MudForm form;
    private bool isValid;
    private RegisterModel newUser = new RegisterModel();
    private string selectedRole;
    private List<string> roles = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        roles = (await roleManager.Roles.ToListAsync()).Select(r => r.Name).ToList();
    }

    private async Task RegisterUser()
    {
        if (isValid)
        {
            var user = new ApplicationUser 
            { 
                UserName = newUser.Email,
                Email = newUser.Email 
            };
            var result = await userManager.CreateAsync(user, newUser.Password);
            if (result.Succeeded)
            {
                if (!string.IsNullOrEmpty(selectedRole))
                {
                    await userManager.AddToRoleAsync(user, selectedRole);
                }
                Navigation.NavigateTo("/users");
            }
            else
            {
                // Handle errors (e.g., display validation errors)
            }
        }
    }

    public class RegisterModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
           
    }
}
