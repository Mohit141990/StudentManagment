@page "/addstudent"
@using Microsoft.EntityFrameworkCore
@using StudentManagment.Core.Entites
@inject IDbContextFactory<StudentManagment.Data.StudentMGTDBContext> DbFactory
@inject NavigationManager NavigationManager
<h3>AddStudent</h3>

<div class="row">
    <div class="col-md-4">
        <EditForm Model="studentModel" method="post" OnValidSubmit="AddStudentInformation" FormName="studentdetail">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="firstname" class="form-label">First Name:</label>
                <InputText id="firstname" @bind-Value="studentModel.FirstName" class="form-control" />
                <ValidationMessage For="() => studentModel.FirstName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="lastname" class="form-label">Last Name:</label>
                <InputText id="lastname" @bind-Value="studentModel.LastName" class="form-control" />
                <ValidationMessage For="() => studentModel.LastName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="dateofbirth" class="form-label">DOB:</label>
                <InputDate id="dateofbirth" @bind-Value="studentModel.DateOfBirth" class="form-control" />
                <ValidationMessage For="() => studentModel.DateOfBirth" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="gender" class="form-label">Gender:</label>
                <InputText id="gender" @bind-Value="studentModel.Gender" class="form-control" />
                <ValidationMessage For="() => studentModel.Gender" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="studentModel.Email" class="form-control" />
                <ValidationMessage For="() => studentModel.Email" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="phonenumber" class="form-label">Phone Number:</label>
                <InputText id="phonenumber" @bind-Value="studentModel.PhoneNumber" class="form-control" />
                <ValidationMessage For="() => studentModel.PhoneNumber" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label>
                <InputText id="address" @bind-Value="studentModel.Address" class="form-control" />
                <ValidationMessage For="() => studentModel.Address" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="enrollmentDate" class="form-label">Enrollment Date:</label>
                <InputDate id="enrollmentDate" @bind-Value="studentModel.EnrollmentDate" class="form-control" />
                <ValidationMessage For="() => studentModel.EnrollmentDate" class="text-danger" />
            </div>
        </EditForm>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    private Student studentModel { get; set; } = new();

    private async Task AddStudentInformation()
    {
        try
        {
            using var context = DbFactory.CreateDbContext();
            context.Students.Add(studentModel);
            await context.SaveChangesAsync();
            NavigationManager.NavigateTo("/enrollments");
        }
        catch (Exception ex)
        {
            
        }

    }

}
